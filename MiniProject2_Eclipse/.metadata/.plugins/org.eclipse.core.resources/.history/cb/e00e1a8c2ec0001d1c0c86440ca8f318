#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>
unsigned char seconds =0;
unsigned char minutes =0;
unsigned char hrs =0;
unsigned char sec_1 =0;
unsigned char sec_2 =0;
unsigned char min_1 =0;
unsigned char min_2 =0;
unsigned char hr_1 =0;
unsigned char hr_2 =0;
ISR (TIMER1_COMPA_vect)
{
	seconds++;
	if (seconds > 59)
	{
		seconds = 0;
		minutes++;
		if (minutes > 59)
		{
			minutes = 0;
			hrs ++;
			if (hrs > 24)
			{
				hrs = 0;
			}
		}
	}
			sec_1 = seconds%10;
			sec_2 = seconds/10;
			min_1 = minutes%10;
			min_2 = minutes/10;
			hr_1 = hrs%10;
			hr_2 = hrs/10;

}
ISR (INT0_vect)
{

	seconds = 0;
	minutes = 0;
	hrs = 0;
}

ISR (INT1_vect)
{
	TIMSK &= ~(1<<OCIE1A);
}
ISR (INT2_vect)
{
	TCCR1B = (1<<CS10)|(1<<CS12)|(1<<WGM12);
}
void Timer1_Init (void)
{
	TCCR1A = (1<<COM1A0) | (1<<FOC1A) ;
	TCCR1B = (1<<CS10)|(1<<CS12)|(1<<WGM12);
	TCNT1 = 0;
	OCR1A = 977;
	TIMSK |= (1<<OCIE1A);
}

void Reset(void)
{

	GICR |= (1<<INT0);
	MCUCR |= (1<<ISC01);

}

void Pause (void)
{

	GICR |= (1<<INT1);
	MCUCR |= (1<<ISC10) | (1<<ISC11);
}

void Resume (void)
{

	GICR |= (1<<INT2);
	MCUCSR &= ~(1<<ISC2);
}
int main (void)
{
	SREG|=(1<<7);
	DDRD &= ~(1<<2);
	DDRD &=~(1<<3);
	DDRB &= ~ (1<<2);
	PORTB |= (1<<2);
	PORTD |= (1<<2);
	Timer1_Init();
	Reset();
	Resume();
	DDRC |= 0x0F;
	PORTC &= 0xF0;
	DDRA|= 0x3F;
	PORTA &= 0xC0;
	Pause();
	while (1)
	{
		PORTA|=(1<<0);
		PORTC = (PORTC & 0xF0) | (sec_1 & 0x0F);
		_delay_us (1);
		PORTA&=~(1<<0);
		PORTA |= (1<<1);
		PORTC = (PORTC & 0xF0) | (sec_2 & 0x0F);
		_delay_us (1);
		PORTA&=~(1<<1);
		PORTA |= (1<<2);
		PORTC = (PORTC & 0xF0) | (min_1 & 0x0F);
		_delay_us (1);
		PORTA&=~(1<<2);
		PORTA |= (1<<3);
		PORTC = (PORTC & 0xF0) | (min_2 & 0x0F);
		_delay_us (1);
		PORTA&=~(1<<3);
		PORTA |= (1<<4);
		PORTC = (PORTC & 0xF0) | (hr_1 & 0x0F);
		_delay_us (1);
		PORTA&=~(1<<4);
		PORTA |= (1<<5);
		PORTC = (PORTC & 0xF0) | (hr_2 & 0x0F);
		_delay_us (1);
		PORTA&=~(1<<5);
	}
	return 0;
}
